<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Remote Access Made Simple" xml:space="preserve">
    <value>Remote Access Made Simple</value>
  </data>
  <data name="Connect to any computer worldwide in seconds with our secure solution." xml:space="preserve">
    <value>Connect to any computer worldwide in seconds with our secure solution.</value>
  </data>
  <data name="Download Now" xml:space="preserve">
    <value>Download Now</value>
  </data>
  <data name="Start Business Trial" xml:space="preserve">
    <value>Start Business Trial</value>
  </data>
  <data name="Powerful Features" xml:space="preserve">
    <value>Powerful Features</value>
  </data>
  <data name="Everything you need for seamless remote access" xml:space="preserve">
    <value>Everything you need for seamless remote access</value>
  </data>
  <data name="Lightning Fast" xml:space="preserve">
    <value>Lightning Fast</value>
  </data>
  <data name="Lightning Fast60fps remote control with latency under 20ms for smooth operation." xml:space="preserve">
    <value>Lightning Fast60fps remote control with latency under 20ms for smooth operation.</value>
  </data>
  <data name="Advanced Security" xml:space="preserve">
    <value>Advanced Security</value>
  </data>
  <data name="End-to-end encryption" xml:space="preserve">
    <value>End-to-end encryption</value>
  </data>
  <data name="60fps remote control with latency under 20ms for smooth operation." xml:space="preserve">
    <value>60fps remote control with latency under 20ms for smooth operation.</value>
  </data>
  <data name="File Transfer" xml:space="preserve">
    <value>File Transfer</value>
  </data>
  <data name="Fast secure file transfer" xml:space="preserve">
    <value>Fast secure file transfer</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="Uptime" xml:space="preserve">
    <value>Uptime</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="Featured On" xml:space="preserve">
    <value>Featured On</value>
  </data>
  <data name="Intuitive Interface" xml:space="preserve">
    <value>Intuitive Interface</value>
  </data>
  <data name="Designed for both beginners and professionals" xml:space="preserve">
    <value>Designed for both beginners and professionals.</value>
  </data>
  <data name="One-click remote access with no complicated setup" xml:space="preserve">
    <value>One-click remote access with no complicated setup</value>
  </data>
  <data name="Clipboard synchronization between devices" xml:space="preserve">
    <value>Clipboard synchronization between devices</value>
  </data>
  <data name="Multiple Session access" xml:space="preserve">
    <value>Multiple Session access</value>
  </data>
  <data name="Advanced Security Features" xml:space="preserve">
    <value>Advanced Security Features</value>
  </data>
  <data name="Our platform utilizes cutting-edge encryption protocols to ensure your data remains protected at all times" xml:space="preserve">
    <value>Our platform utilizes cutting-edge encryption protocols to ensure your data remains protected at all times</value>
  </data>
  <data name="AES-256-GCM Encryption" xml:space="preserve">
    <value>AES-256-GCM Encryption</value>
  </data>
  <data name="Secure symmetric encryption for data at rest, ensuring maximum protection against brute-force attacks" xml:space="preserve">
    <value>Secure symmetric encryption for data at rest, ensuring maximum protection against brute-force attacks</value>
  </data>
  <data name="TLS 1.2 Protocol" xml:space="preserve">
    <value>TLS 1.2 Protocol</value>
  </data>
  <data name="State-of-the-art transport security with perfect forward secrecy for all data in transit between clients and servers" xml:space="preserve">
    <value>State-of-the-art transport security with perfect forward secrecy for all data in transit between clients and servers</value>
  </data>
  <data name="Zero-Knowledge Architecture" xml:space="preserve">
    <value>Zero-Knowledge Architecture</value>
  </data>
  <data name="End-to-end encrypted storage where only you hold the keys - not even our servers can access your data" xml:space="preserve">
    <value>End-to-end encrypted storage where only you hold the keys - not even our servers can access your data,</value>
  </data>
  <data name="Let's Connect" xml:space="preserve">
    <value>Let's Connect</value>
  </data>
  <data name="We're here to help you find the right solution" xml:space="preserve">
    <value>We're here to help you find the right solution.</value>
  </data>
  <data name="get in touch" xml:space="preserve">
    <value>get in touch</value>
  </data>
</root>